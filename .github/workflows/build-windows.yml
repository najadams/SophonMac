name: Build Windows Electron App

on:
  push:
    branches: [ main, win ]
  pull_request:
    branches: [ main, win ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install root dependencies
      run: pnpm install
      
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
        
    - name: Install backend dependencies
        run: |
          cd backend
          if (Test-Path "node_modules") { Remove-Item -Recurse -Force "node_modules" }
          if (Test-Path "package-lock.json") { Remove-Item -Force "package-lock.json" }
          npm install --production --no-package-lock
          Write-Host "Verifying backend dependencies..."
          if (Test-Path "node_modules\cors") {
            Write-Host "✓ cors module found"
          } else {
            Write-Host "✗ cors module missing - attempting reinstall"
            npm install cors --production --no-package-lock
          }
          Get-ChildItem node_modules | Where-Object { $_.Name -match "(cors|express|sqlite3|socket.io|bcrypt)" } | ForEach-Object { Write-Host "✓ $($_.Name) found" }
        shell: pwsh
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Ensure backend node_modules are properly installed
      run: |
        cd backend
        if (Test-Path "node_modules") {
          Remove-Item -Recurse -Force "node_modules"
        }
        npm install --production --no-package-lock
        
    - name: Build/release Electron app
      uses: samuelmeuli/action-electron-builder@v1
      with:
        github_token: ${{ secrets.github_token }}
        release: ${{ startsWith(github.ref, 'refs/tags/') }}
        build_script_name: prebuild
        
    - name: Upload Windows build artifacts
      if: "!startsWith(github.ref, 'refs/tags/')"
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          dist/*.exe
          dist/*.zip
          dist/win-unpacked/
        retention-days: 30